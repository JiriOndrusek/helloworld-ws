package com.helloworld.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.3
 * 2022-10-07T14:51:24.741+02:00
 * Generated source version: 3.5.3
 *
 */
@WebServiceClient(name = "HelloService",
                  wsdlLocation = "classpath:wsdl/HelloService.wsdl",
                  targetNamespace = "http://www.helloworld.com/Service/")
public class HelloService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.helloworld.com/Service/", "HelloService");
    public final static QName HelloPort = new QName("http://www.helloworld.com/Service/", "HelloPort");
    static {
        URL url = HelloService.class.getClassLoader().getResource("wsdl/HelloService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(HelloService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/HelloService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public HelloService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public HelloService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HelloService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HelloService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns HelloPortType
     */
    @WebEndpoint(name = "HelloPort")
    public HelloPortType getHelloPort() {
        return super.getPort(HelloPort, HelloPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloPortType
     */
    @WebEndpoint(name = "HelloPort")
    public HelloPortType getHelloPort(WebServiceFeature... features) {
        return super.getPort(HelloPort, HelloPortType.class, features);
    }

}
